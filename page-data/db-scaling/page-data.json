{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/db-scaling","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"db-scaling: Datenbankskalierung\"), mdx(\"h2\", null, \"Relationale DBMS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scale-Up & Scale-Out: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-skalierungsm%C3%B6glichkeiten\",\n    \"title\": \"cloud-skalierungsmöglichkeiten\"\n  }, \"[[cloud-skalierungsm\\xF6glichkeiten]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalisierung + De-Normalisierung!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sharding: \\\"Horizontal scaling to separate one table\\u2019s rows into multiple different tables, known as partitions\\\"\\n\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-shard\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-shard\",\n    \"className\": \"footnote-ref\"\n  }, \"shard\")))), mdx(\"h3\", null, \"Scaling Dimensionen\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Storage\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Zugriffe/Performance\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"technische DB-Optimierung (z.B. Indizes, Caching)\")), mdx(\"h2\", null, \"NoSQL\"), mdx(\"h3\", null, \"NoSQL Arten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In Memory DBs: SAP HANA; memcached, eXtremeDB\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Caches: memcached, redis\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Key-Value Stores: redis, Amazon Dynamo, Apache Cassandra\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Dokumenten DBs: CouchDB, MongoDB\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Graph DBs: InfoGrid, Neo4j\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Object DBs: ZopeDB, Gemstone\")), mdx(\"h3\", null, \"Eigenschaften NoSQL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keine SQL basierte Abfrage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verzicht auf striktes ACID(atomicity, consistency, isolation, durability) \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-acid\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-acid\",\n    \"className\": \"footnote-ref\"\n  }, \"acid\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eventual Consistent: \\\"\", \"[...]\", \" , if no new updates are made to a given data item, eventually all accesses to that item\\nwill return the last updated value.\\\" \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-evc\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-evc\",\n    \"className\": \"footnote-ref\"\n  }, \"evc\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Einfache Skalierbarkeit durch Daten Verteilung / Sharding: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consistent-hashing\",\n    \"title\": \"consistent-hashing\"\n  }, \"[[consistent-hashing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keine oder weniger \\\"strikte\\\" Schemata\")), mdx(\"p\", null, \"Beispiel an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"apache-cassandra\",\n    \"title\": \"apache-cassandra\"\n  }, \"[[apache-cassandra]]\"), \".\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-shard\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.digitalocean.com/community/tutorials/understanding-database-sharding\"\n  }, \"https://www.digitalocean.com/community/tutorials/understanding-database-sharding\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-shard\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-acid\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/ACID\"\n  }, \"https://en.wikipedia.org/wiki/ACID\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-acid\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-evc\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Eventual_consistency\"\n  }, \"https://en.wikipedia.org/wiki/Eventual_consistency\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-evc\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- Scale-Up & Scale-Out: [[cloud-skalierungsmöglichkeiten]]","targetAnchor":null,"refWord":"cloud-skalierungsmöglichkeiten","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"cloud-skalierungsm\\xF6glichkeiten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Vertikale\"), \" Skalierung:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mehr Ressourcen zu einzelnen Knoten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(physikalische) Grenzen\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Horizontale\"), \" Skalierung\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mehr Knoten zu System/Cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Skaliert (fast) ohne physikalische Grenzen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Genzen durch Parallelisierung\")))), mdx(\"p\", null, \"=> Kombination von beides!\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"39cb1e4c-7be9-5bdb-be67-08c7eac36508","fields":{"slug":"/cloud-skalierungsmöglichkeiten","title":"cloud-skalierungsmöglichkeiten"}}}},{"contextLine":"- Einfache Skalierbarkeit durch Daten Verteilung / Sharding: [[consistent-hashing]]","targetAnchor":null,"refWord":"consistent-hashing","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"consistent-hashing\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Problem: Wie finde ich den Speicherort f\\xFCr ein Objekt in einem verteilten System mit n Knoten?\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/a4b0503b36c64949010762f7cf8b9a92/consistent-hashing.png\",\n    \"alt\": null\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Knoten werden in Adressraum/Hashtabelle (0..S) angeordnet (z.B. durch Hashen der IP)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Objekte werden mit der gleichen Hashfunktion gehashed\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Der Zust\\xE4ndige Knoten ist der mit dem n\\xE4chsth\\xF6heren Hashwert (im Uhrzeigersinn der n\\xE4chste)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Knoten werden mehrfach \\u201Evirtualisiert\\u201C im Ring angeordnet (z.B durch Hash (\\u201EIP1-1\\u201C), Hash (\\u201EIP1-2\\u201C), \\u2026)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anzahl der virtuellen Punkte pro Knoten kann auch anhand der Leistungsst\\xE4rke variiert werden\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anordnung kann auch anhand von \\u201EPartitionen\\u201C erfolgen\")), mdx(\"h2\", null, \"Vorteile\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gleichm\\xE4\\xDFige Verteilung der Last wenn sich die Anzahl der Knoten\\xE4ndert\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamische Anpassung der Last durch die Anzahl \\u201Evirtueller Punkte\\u201C m\\xF6glich => langsames Anfahren\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redundanz / Replikation durch weitere Schreib Vorg\\xE4nge beim \\u201En\\xE4chsten\\u201C, \\u201E\\xFCbern\\xE4chsten\\u201C etc. Knoten.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dadurch auch bereits \\u201Egef\\xFCllter Cache\\u201C m\\xF6glich\")), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://i0.wp.com/www.acodersjourney.com/wp-content/uploads/2017/08/Consistent-Hashing-Adding-Servers.jpg\"\n  }, \"https://i0.wp.com/www.acodersjourney.com/wp-content/uploads/2017/08/Consistent-Hashing-Adding-Servers.jpg\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Consistent_hashing\"\n  }, \"https://en.wikipedia.org/wiki/Consistent_hashing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discord uses consistent hashing \\uD83E\\uDD14: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.discord.com/scaling-elixir-f9b8e1e7c29b\"\n  }, \"https://blog.discord.com/scaling-elixir-f9b8e1e7c29b\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6b5f86c3-7524-5924-a96e-d73624d73356","fields":{"slug":"/consistent-hashing","title":"consistent-hashing"}}}},{"contextLine":"Beispiel an [[apache-cassandra]].","targetAnchor":null,"refWord":"apache-cassandra","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"apache-cassandra\"), mdx(\"p\", null, \"Eigenschaften:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Peer-to-Peer Modell - kein Master: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"gossip-protokoll\",\n    \"title\": \"gossip-protokoll\"\n  }, \"[[gossip-protokoll]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Automatische Replikation / Verteilung: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consistent-hashing\",\n    \"title\": \"consistent-hashing\"\n  }, \"[[consistent-hashing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Multi-Datacenter Support\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tuneable-consistency\",\n    \"title\": \"tuneable-consistency\"\n  }, \"[[tuneable-consistency]]\"), \" Modell (per Operation) \\u2013 read repair Konflikt Aufl\\xF6sung\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hohe Performance: r/w skaliert weitestgehend linear mit Anzahl der Knoten\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hohe Verf\\xFCgbarkeit: Definierbarer Replikationsfaktor, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hinted-handoff\",\n    \"title\": \"hinted-handoff\"\n  }, \"[[hinted-handoff]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cassandra Query Language (CQL)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Lightweight Transactions: PAXOS \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-paxos\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-paxos\",\n    \"className\": \"footnote-ref\"\n  }, \"paxos\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"map-reduce\",\n    \"title\": \"map-reduce\"\n  }, \"[[map-reduce]]\"), \" support: Integration in Hadoop\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-paxos\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/57038300/understanding-cassandra-paxos-implementation\"\n  }, \"https://stackoverflow.com/questions/57038300/understanding-cassandra-paxos-implementation\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-paxos\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"b46ea870-d229-5c3a-9ad4-6d7a21d070c4","fields":{"slug":"/apache-cassandra","title":"apache-cassandra"}}}}],"inboundReferences":[{"contextLine":"Am Beispiel von Datenbankskalierung: [[db-scaling]].","referrer":{"parent":{"id":"16f0c8d4-9336-5f51-bb52-aa764f6eb0ee","fields":{"slug":"/scaling","title":"scaling"}}}}]},"fields":{"slug":"/db-scaling","title":"db-scaling: Datenbankskalierung"}}},"pageContext":{"id":"6e653bd9-cf2c-5038-acfa-7e8caa6340bf"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}