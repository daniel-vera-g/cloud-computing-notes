{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/thread-pooling-pattern","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"thread-pooling-pattern\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"maintains multiple threads waiting for tasks to be allocated for concurrent execution by the supervising program\\\"\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Increase performance and reduce latency in execution by maintaining a pool of threads\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Number of thread related to resources available to the programm\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As reference, latency is: \\\"the delay before a transfer of data begins following an instruction for its transfer.\\\"\")))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/913ec616f8ea0a061731a24948b7653a/thread-pool-pattern.png\",\n    \"alt\": null\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Vorteile:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optimiert Zyklus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Systemunabh\\xE4ngige programmierung aber systemabh\\xE4ngige Konfiguration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isolation\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Nachteile\")), mdx(\"p\", null, \"\\u2013 (Speicher) Overhead \\u2013 Synchronisation der Queues\"), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Thread_pool\"\n  }, \"https://en.wikipedia.org/wiki/Thread_pool\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Latency_(engineering)\"\n  }, \"https://en.wikipedia.org/wiki/Latency_(engineering)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[thread-pooling-pattern]]","referrer":{"parent":{"id":"3b76070b-156a-59aa-9832-0506402a52a7","fields":{"slug":"/algorithmische-optimierung-des-datenzugriffs","title":"algorithmische-optimierung-des-datenzugriffs"}}}}]},"fields":{"slug":"/thread-pooling-pattern","title":"thread-pooling-pattern"}}},"pageContext":{"id":"e3f82a6b-cb80-5b2e-a0f4-ea22a5e53d30"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}