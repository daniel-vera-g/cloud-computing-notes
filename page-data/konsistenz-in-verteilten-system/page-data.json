{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/konsistenz-in-verteilten-system","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"konsistenz-in-verteilten-system\"), mdx(\"h2\", null, \"Konsistenz in verteilten Systemen aus Client Sicht\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Monotonic Read Consistency\"), \": System liefert niemals \\xE4ltere Version bei Leseanfragen an den gleichen Schl\\xFCssel.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Monotonic Write Consistency\"), \": System garantiert die gleiche Schreib- Reihenfolge f\\xFCr alle Knoten (Replikas)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Read Your Writes Consistency\"), \": System liefert einem Client der eine Schreiboperation ausgef\\xFChrt hat keine \\xE4ltere\\nVersion des Datums.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Write Follows Reads Consistency\"), \": Das System garantiert, dass ein Schreibvorgang auf ein Datum in Version X auf\\nanderen Knoten (Replikas) nur ausgef\\xFChrt wird wenn dort das Datum auch in Version X vorliegt.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Strict Consistency\"), \": Leseoperation liefert immer den neusten Wert (Ergebnis der Letzten Schreiboperation)\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[konsistenz-in-verteilten-system]]","referrer":{"parent":{"id":"54974a1e-d582-5efe-bcf6-96c13af30c59","fields":{"slug":"/cloud-algorithmen-patterns","title":"Cloud algorithmen und patterns"}}}}]},"fields":{"slug":"/konsistenz-in-verteilten-system","title":"konsistenz-in-verteilten-system"}}},"pageContext":{"id":"c81c91d8-f8b2-5371-b31c-accdfd8d3f7f"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}