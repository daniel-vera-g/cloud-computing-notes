{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/apache-cassandra","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"apache-cassandra\"), mdx(\"p\", null, \"Eigenschaften:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Peer-to-Peer Modell - kein Master: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"gossip-protokoll\",\n    \"title\": \"gossip-protokoll\"\n  }, \"[[gossip-protokoll]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Automatische Replikation / Verteilung: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consistent-hashing\",\n    \"title\": \"consistent-hashing\"\n  }, \"[[consistent-hashing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Multi-Datacenter Support\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tuneable-consistency\",\n    \"title\": \"tuneable-consistency\"\n  }, \"[[tuneable-consistency]]\"), \" Modell (per Operation) \\u2013 read repair Konflikt Aufl\\xF6sung\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hohe Performance: r/w skaliert weitestgehend linear mit Anzahl der Knoten\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hohe Verf\\xFCgbarkeit: Definierbarer Replikationsfaktor, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hinted-handoff\",\n    \"title\": \"hinted-handoff\"\n  }, \"[[hinted-handoff]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cassandra Query Language (CQL)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Lightweight Transactions: PAXOS \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-paxos\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-paxos\",\n    \"className\": \"footnote-ref\"\n  }, \"paxos\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"map-reduce\",\n    \"title\": \"map-reduce\"\n  }, \"[[map-reduce]]\"), \" support: Integration in Hadoop\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-paxos\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/57038300/understanding-cassandra-paxos-implementation\"\n  }, \"https://stackoverflow.com/questions/57038300/understanding-cassandra-paxos-implementation\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-paxos\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"1. Peer-to-Peer Modell - kein Master: [[gossip-protokoll]]","targetAnchor":null,"refWord":"gossip-protokoll","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"gossip-protokoll\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Gossip is a peer-to-peer communication protocol in which nodes periodically exchange state information about\\nthemselves and about other nodes they know about\\\" \", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-gossip\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-gossip\",\n    \"className\": \"footnote-ref\"\n  }, \"gossip\")))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-gossip\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/architecture/archGossipAbout.html\"\n  }, \"https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/architecture/archGossipAbout.html\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-gossip\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a6e35496-8154-506f-8908-6ac6a70e1181","fields":{"slug":"/gossip-protokoll","title":"gossip-protokoll"}}}},{"contextLine":"1. Automatische Replikation / Verteilung: [[consistent-hashing]]","targetAnchor":null,"refWord":"consistent-hashing","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"consistent-hashing\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Problem: Wie finde ich den Speicherort f\\xFCr ein Objekt in einem verteilten System mit n Knoten?\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/a4b0503b36c64949010762f7cf8b9a92/consistent-hashing.png\",\n    \"alt\": null\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Knoten werden in Adressraum/Hashtabelle (0..S) angeordnet (z.B. durch Hashen der IP)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Objekte werden mit der gleichen Hashfunktion gehashed\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Der Zust\\xE4ndige Knoten ist der mit dem n\\xE4chsth\\xF6heren Hashwert (im Uhrzeigersinn der n\\xE4chste)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Knoten werden mehrfach \\u201Evirtualisiert\\u201C im Ring angeordnet (z.B durch Hash (\\u201EIP1-1\\u201C), Hash (\\u201EIP1-2\\u201C), \\u2026)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anzahl der virtuellen Punkte pro Knoten kann auch anhand der Leistungsst\\xE4rke variiert werden\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anordnung kann auch anhand von \\u201EPartitionen\\u201C erfolgen\")), mdx(\"h2\", null, \"Vorteile\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gleichm\\xE4\\xDFige Verteilung der Last wenn sich die Anzahl der Knoten \\xE4ndert\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamische Anpassung der Last durch die Anzahl \\u201Evirtueller Punkte\\u201C m\\xF6glich => langsames Anfahren\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redundanz / Replikation durch weitere Schreib Vorg\\xE4nge beim \\u201En\\xE4chsten\\u201C, \\u201E\\xFCbern\\xE4chsten\\u201C etc. Knoten.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dadurch auch bereits \\u201Egef\\xFCllter Cache\\u201C m\\xF6glich\")), mdx(\"h2\", null, \"Unterschied Replicas und Virtuelle Knoten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Virtuelle Knoten sind Referenzen zu den physikalischen Knoten und enthalten keine Daten direkt\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Replicas fungieren als \\\"Backup\\\" und enthalten eine Kopie der Daten\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/40622492/difference-between-replicas-and-virtual-nodes-in-consistent-hashing\"\n  }, \"https://stackoverflow.com/questions/40622492/difference-between-replicas-and-virtual-nodes-in-consistent-hashing\"))), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://i0.wp.com/www.acodersjourney.com/wp-content/uploads/2017/08/Consistent-Hashing-Adding-Servers.jpg\"\n  }, \"https://i0.wp.com/www.acodersjourney.com/wp-content/uploads/2017/08/Consistent-Hashing-Adding-Servers.jpg\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Consistent_hashing\"\n  }, \"https://en.wikipedia.org/wiki/Consistent_hashing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discord uses consistent hashing \\uD83E\\uDD14: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.discord.com/scaling-elixir-f9b8e1e7c29b\"\n  }, \"https://blog.discord.com/scaling-elixir-f9b8e1e7c29b\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Good resources:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.toptal.com/big-data/consistent-hashing\"\n  }, \"https://www.toptal.com/big-data/consistent-hashing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://itnext.io/introducing-consistent-hashing-9a289769052e\"\n  }, \"https://itnext.io/introducing-consistent-hashing-9a289769052e\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6b5f86c3-7524-5924-a96e-d73624d73356","fields":{"slug":"/consistent-hashing","title":"consistent-hashing"}}}},{"contextLine":"1. [[tuneable-consistency]] Modell (per Operation) – read repair Konflikt Auflösung","targetAnchor":null,"refWord":"tuneable-consistency","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"tuneable-consistency\"), mdx(\"p\", null, \"Eigenschaften:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zwischen starker und \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eventual consistency\"), \" w\\xE4hlen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Per Operation und f\\xFCr lesen und schreiben m\\xF6glich\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Managed Multi-Datenzentren use-cases operationen\")), mdx(\"h2\", null, \"Funktionsweise\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replikationsfaktor wird festgelegt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quorum = GanzZahligAbgerundet(Replikationsfaktor / 2 + 1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verschiedene Konsistenzlevel (pro Operation w\\xE4hlbar)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konflikt Aufl\\xF6sung via Timestamp - neuster gewinnt\")), mdx(\"h3\", null, \"Konsistenzlevel\"), mdx(\"h4\", null, \"Lesend (Auswahl)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ONE: Antwort des n\\xE4chsten Knotens\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Quorum: Antwort mit aktuellstem Zeitstempel aus Quorum Knoten\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Local Quorum: wie Quorum aber nur aus einem Rechenzentrum\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ALL: Antwort mit aktuellstem Zeitstempel nach Abfrage aller Replika- Knoten\")), mdx(\"h4\", null, \"Schreibend (Auswahl)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Any: Der Schreibzugriff muss persistiert sein (eventuell Lesen nicht m\\xF6glich wenn die zust\\xE4ndigen Knoten nicht\\nverf\\xFCgbar => \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hinted-handoff\",\n    \"title\": \"hinted-handoff\"\n  }, \"[[hinted-handoff]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ONE: Der Schreibzugriff muss einem zust\\xE4ndigen Knoten persistiert sein (ist danach lesbar)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Quorum: der Schreibzugriff muss bei Quorum Knoten erfolgreich sein\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Local Quorum: wie Quorum nur 1 RZ\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"All: der Schreibzugriff muss bei allen Replika-Knoten erfolgreich sein\")), mdx(\"h2\", null, \"Datenmodell\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/2cf44392de584994c5e5f5afddb431e0/cassandra.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Beispiel Queries:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"sql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-sql\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"SELECT\"), \" name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"FROM\"), \" students\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"USING\"), \" CONSISTENCY QUORUM\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"where\"), \" id \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"10\")))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=hKLKpqY9UrY\"\n  }, \"https://www.youtube.com/watch?v=hKLKpqY9UrY\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Related: CAP-Theorem aka. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"brewers-theorem\",\n    \"title\": \"brewers-theorem\"\n  }, \"[[brewers-theorem]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"9b6cd778-346c-50ac-bef0-50d9c8be661c","fields":{"slug":"/tuneable-consistency","title":"tuneable-consistency"}}}},{"contextLine":"1. Hohe Verfügbarkeit: Definierbarer Replikationsfaktor, [[hinted-handoff]]","targetAnchor":null,"refWord":"hinted-handoff","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"hinted-handoff\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Hinted handoff is a Cassandra feature that optimizes the cluster consistency process and anti-entropy when a\\nreplica-owning node is not available, due to network issues or other problems, to accept a replica from a successful\\nwrite operation.\\\" \", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-hha\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-hha\",\n    \"className\": \"footnote-ref\"\n  }, \"hha\")))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/11ab32527624f20784148cf863a3eca8/hha.png\",\n    \"alt\": null\n  })), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-hha\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.datastax.com/en/cassandra-oss/2.1/cassandra/dml/dml_about_hh_c.html\"\n  }, \"https://docs.datastax.com/en/cassandra-oss/2.1/cassandra/dml/dml_about_hh_c.html\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-hha\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c0822eef-3549-5645-8788-fb3540a1ec36","fields":{"slug":"/hinted-handoff","title":"hinted-handoff"}}}},{"contextLine":"1. [[map-reduce]] support: Integration in Hadoop","targetAnchor":null,"refWord":"map-reduce","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"map & reduce\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Problem: Verarbeitung gro\\xDFer Datenmengen in einem verteilten System\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hohe I/O Last\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Orchestrierung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"System um nebenl\\xE4ufig, parallel Berechnungen auf mehrere Rechner zu verteilen\")), mdx(\"h2\", null, \"MapReduce Vorgang\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/a0f6e540021bf10e1e05c19c08ddf630/mapReduce.png\",\n    \"alt\": null\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"MAP Schritt:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Map Funktion wird f\\xFCr jedes key => value Paar einer Eingabeliste aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ausgabe ist eine neue Abbildung key\\u2018 => Ergebnis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dieses wird als Zwischenergebnis vom Map Schritt gesammelt\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reduce Schritt:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Zwischenergebnisse werden der reduce Funktion \\xFCbergeben die daraus eine Ergebnisliste berechnet/aggregiert\")))), mdx(\"h3\", null, \"Input - Map - Reduce - Output example\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/61c7767cb9dfb5cf51c3d59697d5958e/map-reduce-example.png\",\n    \"alt\": null\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dzone.com/articles/mapreduce-design-patterns-1\"\n  }, \"https://dzone.com/articles/mapreduce-design-patterns-1\"))), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dzone.com/articles/mapreduce-design-patterns-1\"\n  }, \"https://dzone.com/articles/mapreduce-design-patterns-1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/MapReduce\"\n  }, \"https://en.wikipedia.org/wiki/MapReduce\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"59713893-0e24-51b6-b147-9bc39df2d733","fields":{"slug":"/map-reduce","title":"map & reduce"}}}}],"inboundReferences":[{"contextLine":"Beispiel an [[apache-cassandra]].","referrer":{"parent":{"id":"6e653bd9-cf2c-5038-acfa-7e8caa6340bf","fields":{"slug":"/db-scaling","title":"db-scaling: Datenbankskalierung"}}}}]},"fields":{"slug":"/apache-cassandra","title":"apache-cassandra"}}},"pageContext":{"id":"b46ea870-d229-5c3a-9ad4-6d7a21d070c4","refWordMdxSlugDict":{"gossip-protokoll":"gossip-protokoll","consistent-hashing":"consistent-hashing","tuneable-consistency":"tuneable-consistency","hinted-handoff":"hinted-handoff","brewers-theorem":"brewers-theorem","map-reduce":"map-reduce"}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}