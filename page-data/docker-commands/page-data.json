{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/docker-commands","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"docker-commands\"), mdx(\"h2\", null, \"Cleaning up\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"General clean up: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker system prune\"))), mdx(\"p\", null, \"Container:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Container: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker container rm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only stopped containers: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker container prune\"))), mdx(\"p\", null, \"Images:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker image rm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker image prune\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only unused: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker image prune -a\"))), mdx(\"p\", null, \"Volumes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume rm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unused volumes: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume prune\"))), mdx(\"p\", null, \"Networks:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker network rm\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Unused networks: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker network prune\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://linuxize.com/post/how-to-remove-docker-images-containers-volumes-and-networks/\"\n  }, \"https://linuxize.com/post/how-to-remove-docker-images-containers-volumes-and-networks/\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.digitalocean.com/community/tutorials/how-to-remove-docker-images-containers-and-volumes\"\n  }, \"https://www.digitalocean.com/community/tutorials/how-to-remove-docker-images-containers-and-volumes\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/30133664/how-do-you-list-volumes-in-docker-containers\"\n  }, \"https://stackoverflow.com/questions/30133664/how-do-you-list-volumes-in-docker-containers\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[docker-commands]]","referrer":{"parent":{"id":"6e8f59b3-0b27-54eb-8c7a-681525b2993a","fields":{"slug":"/docker","title":"Docker"}}}}]},"fields":{"slug":"/docker-commands","title":"docker-commands"}}},"pageContext":{"id":"f8e73f4d-1a9d-5c3c-8871-bdcbb3f84447","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}