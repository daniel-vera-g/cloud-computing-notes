{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/verteilung-von-code","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"verteilung-von-code\"), mdx(\"h2\", null, \"Probleme durch Parallelisierung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"amdahls-law\",\n    \"title\": \"amdahls-law\"\n  }, \"[[amdahls-law]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"datenabh%C3%A4ngigkeiten\",\n    \"title\": \"datenabhängigkeiten\"\n  }, \"[[datenabh\\xE4ngigkeiten]]\"), \"\")), mdx(\"h2\", null, \"Patterns zur Verteilung von code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"map-reduce\",\n    \"title\": \"map-reduce\"\n  }, \"[[map-reduce]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- [[amdahls-law]]","targetAnchor":null,"refWord":"amdahls-law","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"amdahls-law\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Modell in der Informatik \\xFCber die Beschleunigung von Programmen durch parallele Ausf\\xFChrung.\\\"\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Der parallelisierbare Part l\\xE4sst sich durch mehr/bessere Hardware verschnellern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Der nicht parallelisierbare Teil ist nur durch code optimierung verbesserbar\")), mdx(\"h2\", null, \"Mathematische definition\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"p = der O(n) parallelisierbare Teil eines Programmes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"s = der sequenzielle (nicht parallelisierbare) Teil des Programmes\")), mdx(\"p\", null, \"Maximale Geschwindigkeitsgewinn durch:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"s+p / s+p/N bei N Cores/CPUs gegeben\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Das gilt selbst wenn der Kommunikationsoverhead etc. vernachl\\xE4ssigbar\")), mdx(\"h2\", null, \"Quellen\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://tutorials.jenkov.com/java-concurrency/amdahls-law.html\"\n  }, \"http://tutorials.jenkov.com/java-concurrency/amdahls-law.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Amdahlsches_Gesetz\"\n  }, \"https://de.wikipedia.org/wiki/Amdahlsches_Gesetz\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"04652e17-ca28-5396-bd3e-d4b3a84c6021","fields":{"slug":"/amdahls-law","title":"amdahls-law"}}}},{"contextLine":"- [[datenabhängigkeiten]]","targetAnchor":null,"refWord":"datenabhängigkeiten","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"datenabh\\xE4ngigkeiten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Flow Dependency (read after write): \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a=1; b=a; c=b;\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anti Dependency (write after read): \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a=1; b=a+1; a=2;\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Output Dependency (write after write)\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"1fd9164c-47a8-501e-bc63-7d30db012b75","fields":{"slug":"/datenabhängigkeiten","title":"datenabhängigkeiten"}}}},{"contextLine":"- [[map-reduce]]","targetAnchor":null,"refWord":"map-reduce","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"map & reduce\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Problem: Verarbeitung gro\\xDFer Datenmengen in einem verteilten System\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hohe I/O Last\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Orchestrierung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"System um nebenl\\xE4ufig, parallel Berechnungen auf mehrere Rechner zu verteilen\")), mdx(\"h2\", null, \"MapReduce Vorgang\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/a0f6e540021bf10e1e05c19c08ddf630/mapReduce.png\",\n    \"alt\": null\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"MAP Schritt:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Map Funktion wird f\\xFCr jedes key => value Paar einer Eingabeliste aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ausgabe ist eine neue Abbildung key\\u2018 => Ergebnis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dieses wird als Zwischenergebnis vom Map Schritt gesammelt\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reduce Schritt:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Zwischenergebnisse werden der reduce Funktion \\xFCbergeben die daraus eine Ergebnisliste berechnet/aggregiert\")))), mdx(\"h3\", null, \"Input - Map - Reduce - Output example\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/61c7767cb9dfb5cf51c3d59697d5958e/map-reduce-example.png\",\n    \"alt\": null\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dzone.com/articles/mapreduce-design-patterns-1\"\n  }, \"https://dzone.com/articles/mapreduce-design-patterns-1\"))), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dzone.com/articles/mapreduce-design-patterns-1\"\n  }, \"https://dzone.com/articles/mapreduce-design-patterns-1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/MapReduce\"\n  }, \"https://en.wikipedia.org/wiki/MapReduce\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"59713893-0e24-51b6-b147-9bc39df2d733","fields":{"slug":"/map-reduce","title":"map & reduce"}}}}],"inboundReferences":[{"contextLine":"1. [[verteilung-von-code]]","referrer":{"parent":{"id":"54974a1e-d582-5efe-bcf6-96c13af30c59","fields":{"slug":"/cloud-algorithmen-patterns","title":"Cloud algorithmen und patterns"}}}}]},"fields":{"slug":"/verteilung-von-code","title":"verteilung-von-code"}}},"pageContext":{"id":"6884d127-348d-5ffc-8eb2-0d71e07dbf1c","refWordMdxSlugDict":{"amdahls-law":"amdahls-law","datenabhängigkeiten":"datenabhangigkeiten","map-reduce":"map-reduce"}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}