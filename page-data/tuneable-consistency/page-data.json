{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/tuneable-consistency","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"tuneable-consistency\"), mdx(\"p\", null, \"Eigenschaften:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zwischen starker und \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eventual consistency\"), \" w\\xE4hlen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Per Operation und f\\xFCr lesen und schreiben m\\xF6glich\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Managed Multi-Datenzentren use-cases operationen\")), mdx(\"h2\", null, \"Funktionsweise\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replikationsfaktor wird festgelegt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quorum = GanzZahligAbgerundet(Replikationsfaktor / 2 + 1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verschiedene Konsistenzlevel (pro Operation w\\xE4hlbar)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konflikt Aufl\\xF6sung via Timestamp - neuster gewinnt\")), mdx(\"h3\", null, \"Konsistenzlevel\"), mdx(\"h4\", null, \"Lesend (Auswahl)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ONE: Antwort des n\\xE4chsten Knotens\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Quorum: Antwort mit aktuellstem Zeitstempel aus Quorum Knoten\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Local Quorum: wie Quorum aber nur aus einem Rechenzentrum\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ALL: Antwort mit aktuellstem Zeitstempel nach Abfrage aller Replika- Knoten\")), mdx(\"h4\", null, \"Schreibend (Auswahl)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Any: Der Schreibzugriff muss persistiert sein (eventuell Lesen nicht m\\xF6glich wenn die zust\\xE4ndigen Knoten nicht\\nverf\\xFCgbar => \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"hinted-handoff\",\n    \"title\": \"hinted-handoff\"\n  }, \"[[hinted-handoff]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ONE: Der Schreibzugriff muss einem zust\\xE4ndigen Knoten persistiert sein (ist danach lesbar)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Quorum: der Schreibzugriff muss bei Quorum Knoten erfolgreich sein\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Local Quorum: wie Quorum nur 1 RZ\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"All: der Schreibzugriff muss bei allen Replika-Knoten erfolgreich sein\")), mdx(\"h2\", null, \"Datenmodell\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/2cf44392de584994c5e5f5afddb431e0/cassandra.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Beispiel Queries:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"sql\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-sql\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"SELECT\"), \" name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"FROM\"), \" students\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"USING\"), \" CONSISTENCY QUORUM\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"where\"), \" id \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"10\")))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=hKLKpqY9UrY\"\n  }, \"https://www.youtube.com/watch?v=hKLKpqY9UrY\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Related: CAP-Theorem aka. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"brewers-theorem\",\n    \"title\": \"brewers-theorem\"\n  }, \"[[brewers-theorem]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"   verfÃ¼gbar => [[hinted-handoff]])","targetAnchor":null,"refWord":"hinted-handoff","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"hinted-handoff\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Hinted handoff is a Cassandra feature that optimizes the cluster consistency process and anti-entropy when a\\nreplica-owning node is not available, due to network issues or other problems, to accept a replica from a successful\\nwrite operation.\\\" \", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-hha\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-hha\",\n    \"className\": \"footnote-ref\"\n  }, \"hha\")))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/cloud-computing-notes/11ab32527624f20784148cf863a3eca8/hha.png\",\n    \"alt\": null\n  })), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-hha\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.datastax.com/en/cassandra-oss/2.1/cassandra/dml/dml_about_hh_c.html\"\n  }, \"https://docs.datastax.com/en/cassandra-oss/2.1/cassandra/dml/dml_about_hh_c.html\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-hha\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c0822eef-3549-5645-8788-fb3540a1ec36","fields":{"slug":"/hinted-handoff","title":"hinted-handoff"}}}},{"contextLine":"- Related: CAP-Theorem aka. [[brewers-theorem]]","targetAnchor":null,"refWord":"brewers-theorem","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"brewers-theorem\"), mdx(\"p\", null, \"Ein Verteiltes System kann nur zwei der folgenden drei Eigenschaften erf\\xFCllen:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Konsistenz (C)\"), \": Alle Knoten sehen zur selben Zeit die selben Daten\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Verf\\xFCgbarkeit (A)\"), \": Alle! Anfragen an das System werden stets beantwortet\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Partitionstoleranz (P)\"), \": Das System setzt keine perfekte Kommunikationsinfrastruktur voraus. Nachrichten k\\xF6nnen\\nverloren gehen das Netz kann\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"9e1c9d4e-0158-5021-9e09-50ff7e9c17ad","fields":{"slug":"/brewers-theorem","title":"brewers-theorem"}}}}],"inboundReferences":[{"contextLine":"1. [[tuneable-consistency]] Modell (per Operation) â read repair Konflikt AuflÃ¶sung","referrer":{"parent":{"id":"b46ea870-d229-5c3a-9ad4-6d7a21d070c4","fields":{"slug":"/apache-cassandra","title":"apache-cassandra"}}}}]},"fields":{"slug":"/tuneable-consistency","title":"tuneable-consistency"}}},"pageContext":{"id":"9b6cd778-346c-50ac-bef0-50d9c8be661c"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}