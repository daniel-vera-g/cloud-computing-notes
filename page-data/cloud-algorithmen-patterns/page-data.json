{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/cloud-algorithmen-patterns","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Cloud algorithmen und patterns\"), mdx(\"p\", null, \"Wichtige Dimensionen:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CPU, GPU (Instructions/s)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RAM (I/O, Gr\\xF6\\xDFe)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storage (I/O, Gr\\xF6\\xDFe)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DB (Transaktionen/s, Gr\\xF6\\xDFe)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Netzwerk (Durchsatz, Delay, RTT)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Algorithmen\")), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cloud-skalierungsm%C3%B6glichkeiten\",\n    \"title\": \"cloud-skalierungsmöglichkeiten\"\n  }, \"[[cloud-skalierungsm\\xF6glichkeiten]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"konsistenz-in-verteilten-system\",\n    \"title\": \"konsistenz-in-verteilten-system\"\n  }, \"[[konsistenz-in-verteilten-system]]\"), \"\")), mdx(\"h2\", null, \"Parallelisierung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zu beachten bei horizontale Skalierung\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"verteilung-von-code\",\n    \"title\": \"verteilung-von-code\"\n  }, \"[[verteilung-von-code]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"verteilung-von-daten\",\n    \"title\": \"verteilung-von-daten\"\n  }, \"[[verteilung-von-daten]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"zugriff-auf-daten-und-code\",\n    \"title\": \"zugriff-auf-daten-und-code\"\n  }, \"[[zugriff-auf-daten-und-code]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- [[cloud-skalierungsmöglichkeiten]]","targetAnchor":null,"refWord":"cloud-skalierungsmöglichkeiten","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"cloud-skalierungsm\\xF6glichkeiten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Vertikale\"), \" Skalierung(Scale Up):\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mehr Ressourcen zu einzelnen Knoten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(physikalische) Grenzen\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Horizontale\"), \" Skalierung(Scale Out):\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mehr Knoten zu System/Cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Skaliert (fast) ohne physikalische Grenzen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Genzen durch Parallelisierung\")))), mdx(\"p\", null, \"=> Kombination von beides!\"), mdx(\"h2\", null, \"Beispiele\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Horizontal: Steigerung der Leistung eines Systems durch das Hinzuf\\xFCgen zus\\xE4tzlicher Rechner/Knoten\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Load balancer, der die Last auf verschiedene Rechner verteilt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verteilte Datenbank um die Last der DB Anfragen zu verringern\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Vertikal: Hinzuf\\xFCgen von Ressourcen zu einem Knoten/Rechner des Systems.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vergr\\xF6\\xDFern v. Speicherplatz\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hinzuf\\xFCgen einer CPU\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"39cb1e4c-7be9-5bdb-be67-08c7eac36508","fields":{"slug":"/cloud-skalierungsmöglichkeiten","title":"cloud-skalierungsmöglichkeiten"}}}},{"contextLine":"- [[konsistenz-in-verteilten-system]]","targetAnchor":null,"refWord":"konsistenz-in-verteilten-system","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"konsistenz-in-verteilten-system\"), mdx(\"h2\", null, \"Konsistenz in verteilten Systemen aus Client Sicht\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Monotonic Read Consistency\"), \": System liefert niemals \\xE4ltere Version bei Leseanfragen an den gleichen Schl\\xFCssel.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Monotonic Write Consistency\"), \": System garantiert die gleiche Schreib- Reihenfolge f\\xFCr alle Knoten (Replikas)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Read Your Writes Consistency\"), \": System liefert einem Client der eine Schreiboperation ausgef\\xFChrt hat keine \\xE4ltere\\nVersion des Datums.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Write Follows Reads Consistency\"), \": Das System garantiert, dass ein Schreibvorgang auf ein Datum in Version X auf\\nanderen Knoten (Replikas) nur ausgef\\xFChrt wird wenn dort das Datum auch in Version X vorliegt.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Strict Consistency\"), \": Leseoperation liefert immer den neusten Wert (Ergebnis der Letzten Schreiboperation)\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c81c91d8-f8b2-5371-b31c-accdfd8d3f7f","fields":{"slug":"/konsistenz-in-verteilten-system","title":"konsistenz-in-verteilten-system"}}}},{"contextLine":"1. [[verteilung-von-code]]","targetAnchor":null,"refWord":"verteilung-von-code","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"verteilung-von-code\"), mdx(\"h2\", null, \"Probleme durch Parallelisierung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"amdahls-law\",\n    \"title\": \"amdahls-law\"\n  }, \"[[amdahls-law]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"datenabh%C3%A4ngigkeiten\",\n    \"title\": \"datenabhängigkeiten\"\n  }, \"[[datenabh\\xE4ngigkeiten]]\"), \"\")), mdx(\"h2\", null, \"Patterns zur Verteilung von code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"map-reduce\",\n    \"title\": \"map-reduce\"\n  }, \"[[map-reduce]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6884d127-348d-5ffc-8eb2-0d71e07dbf1c","fields":{"slug":"/verteilung-von-code","title":"verteilung-von-code"}}}},{"contextLine":"1. [[verteilung-von-daten]]","targetAnchor":null,"refWord":"verteilung-von-daten","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"verteilung-von-daten\"), mdx(\"h2\", null, \"Probleme bei Verteilung von Daten\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"brewers-theorem\",\n    \"title\": \"brewers-theorem\"\n  }, \"[[brewers-theorem]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"multiversion-concurrency-control\",\n    \"title\": \"multiversion-concurrency-control\"\n  }, \"[[multiversion-concurrency-control]]\"), \"\")), mdx(\"h2\", null, \"Patterns f\\xFCr die Verteilung von Daten\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"shared-nothing\",\n    \"title\": \"shared-nothing\"\n  }, \"[[shared-nothing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"shared-disk-architecture\",\n    \"title\": \"shared-disk-architecture\"\n  }, \"[[shared-disk-architecture]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"consistent-hashing\",\n    \"title\": \"consistent-hashing\"\n  }, \"[[consistent-hashing]]\"), \"\")), mdx(\"h2\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Shared_Nothing_Architecture\"\n  }, \"https://de.wikipedia.org/wiki/Shared_Nothing_Architecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Shared_disk_architecture\"\n  }, \"https://en.wikipedia.org/wiki/Shared_disk_architecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.geeksforgeeks.org/difference-between-shared-nothing-architecture-and-shared-disk-architecture/\"\n  }, \"https://www.geeksforgeeks.org/difference-between-shared-nothing-architecture-and-shared-disk-architecture/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.bigdata-insider.de/was-ist-eine-shared-nothing-architektur-a-818728/\"\n  }, \"https://www.bigdata-insider.de/was-ist-eine-shared-nothing-architektur-a-818728/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.benstopford.com/2009/11/24/understanding-the-shared-nothing-architecture/\"\n  }, \"http://www.benstopford.com/2009/11/24/understanding-the-shared-nothing-architecture/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"558193fc-67dc-52e1-a6b4-dac2452a6176","fields":{"slug":"/verteilung-von-daten","title":"verteilung-von-daten"}}}},{"contextLine":"1. [[zugriff-auf-daten-und-code]]","targetAnchor":null,"refWord":"zugriff-auf-daten-und-code","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"zugriff-auf-daten-und-code\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Wie Netzwerkprobleme ausgleichen?\")), mdx(\"p\", null, \"Netzwerkprobleme ausgleichen durch:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/cloud-resilienz\",\n    \"title\": \"cloud-resilienz\"\n  }, \"[[cloud-resilienz]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/algorithmische-optimierung-des-datenzugriffs\",\n    \"title\": \"algorithmische-optimierung-des-datenzugriffs\"\n  }, \"[[algorithmische-optimierung-des-datenzugriffs]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"f6313960-246d-5d47-81fc-0b44bcc1733b","fields":{"slug":"/zugriff-auf-daten-und-code","title":"zugriff-auf-daten-und-code"}}}}],"inboundReferences":[{"contextLine":"- [[cloud-algorithmen-patterns]]","referrer":{"parent":{"id":"05d219ae-fc29-54a8-90f7-cc74877831a1","fields":{"slug":"/cloud-computing-lecture","title":"cloud-computing-lecture"}}}}]},"fields":{"slug":"/cloud-algorithmen-patterns","title":"Cloud algorithmen und patterns"}}},"pageContext":{"id":"54974a1e-d582-5efe-bcf6-96c13af30c59"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}