{"3b76070b-156a-59aa-9832-0506402a52a7":{"id":"3b76070b-156a-59aa-9832-0506402a52a7","path":"/algorithmische-optimierung-des-datenzugriffs","title":"algorithmische-optimierung-des-datenzugriffs","excerpt":"algorithmische-optimierung-des-datenzugriffs [thread-pooling-pattern]"},"04652e17-ca28-5396-bd3e-d4b3a84c6021":{"id":"04652e17-ca28-5396-bd3e-d4b3a84c6021","path":"/amdahls-law","title":"amdahls-law","excerpt":"amdahls-law p = der O(n) parallelisierbare Teil eines Programmes s = der sequenzielle (nicht parallelisierbare) Teil des Programmes Maximale…"},"9e1c9d4e-0158-5021-9e09-50ff7e9c17ad":{"id":"9e1c9d4e-0158-5021-9e09-50ff7e9c17ad","path":"/brewers-theorem","title":"brewers-theorem","excerpt":"brewers-theorem Ein Verteiltes System kann nur zwei der folgenden drei Eigenschaften erfüllen: Konsistenz (C) : Alle Knoten sehen zur selben…"},"54974a1e-d582-5efe-bcf6-96c13af30c59":{"id":"54974a1e-d582-5efe-bcf6-96c13af30c59","path":"/cloud-algorithmen-patterns","title":"Cloud algorithmen und patterns","excerpt":"Cloud algorithmen und patterns Wichtige Dimensionen: CPU, GPU (Instructions/s) RAM (I/O, Größe) Storage (I/O, Größe) DB (Transaktionen/s,…"},"7ce6b7f2-fbdb-5acd-a618-b022358dc5b3":{"id":"7ce6b7f2-fbdb-5acd-a618-b022358dc5b3","path":"/cloud-computing-introduction","title":"cloud-computing-introduction","excerpt":"cloud-computing-introduction NIST Definitions On-demand Self Service : Die Provisionierung der Ressourcen (z. B. Rechenleistung, Storage)…"},"05d219ae-fc29-54a8-90f7-cc74877831a1":{"id":"05d219ae-fc29-54a8-90f7-cc74877831a1","path":"/cloud-computing-lecture","title":"cloud-computing-lecture","excerpt":"cloud-computing-lecture Notes regarding the cloud computing course held in the summer semester 2021 Content credits go to the lecturers…"},"8fc9f842-f50e-58bc-8a4f-438359d0aacd":{"id":"8fc9f842-f50e-58bc-8a4f-438359d0aacd","path":"/cloud-resilienz","title":"cloud-resilienz und stabilität","excerpt":"cloud-resilienz und stabilität Retrys / Timeouts: Beschränkt die Belegung von Ressourcen „Circuit Breaker“: Verschwende keine Ressourcen…"},"39cb1e4c-7be9-5bdb-be67-08c7eac36508":{"id":"39cb1e4c-7be9-5bdb-be67-08c7eac36508","path":"/cloud-skalierungsmöglichkeiten","title":"cloud-skalierungsmöglichkeiten","excerpt":"cloud-skalierungsmöglichkeiten Vertikale  Skalierung: Mehr Ressourcen zu einzelnen Knoten (physikalische) Grenzen Horizontale  Skalierung…"},"6b5f86c3-7524-5924-a96e-d73624d73356":{"id":"6b5f86c3-7524-5924-a96e-d73624d73356","path":"/consistent-hashing","title":"consistent-hashing","excerpt":"consistent-hashing Problem: Wie finde ich den Speicherort für ein Objekt in einem verteilten System mit n Knoten? Knoten werden in…"},"1fd9164c-47a8-501e-bc63-7d30db012b75":{"id":"1fd9164c-47a8-501e-bc63-7d30db012b75","path":"/datenabhängigkeiten","title":"datenabhängigkeiten","excerpt":"datenabhängigkeiten Flow Dependency (read after write): a=1; b=a; c=b; Anti Dependency (write after read): a=1; b=a+1; a=2; Output…"},"c81c91d8-f8b2-5371-b31c-accdfd8d3f7f":{"id":"c81c91d8-f8b2-5371-b31c-accdfd8d3f7f","path":"/konsistenz-in-verteilten-system","title":"konsistenz-in-verteilten-system","excerpt":"konsistenz-in-verteilten-system Konsistenz in verteilten Systemen aus Client Sicht Monotonic Read Consistency : System liefert niemals…"},"a58d76f1-fcb3-5cb9-9861-9fc5d3a065b4":{"id":"a58d76f1-fcb3-5cb9-9861-9fc5d3a065b4","path":"/mapreduce","title":"mapReduce","excerpt":"mapReduce Problem: Verarbeitung großer Datenmengen in einem verteilten System Hohe I/O Last Orchestrierung System um nebenläufig, parallel…"},"660a5dc6-8da5-5134-8f9f-0923a8a6f142":{"id":"660a5dc6-8da5-5134-8f9f-0923a8a6f142","path":"/multiversion-concurrency-control","title":"multiversion-concurrency-control","excerpt":"multiversion-concurrency-control Löst das Problem des Konkurrierenden Zugriffs ohne „Locks“ Daten sind „Immutable“: Schreibzugriffe erzeugen…"},"64934df8-b752-536a-a782-8fdbae1d3df7":{"id":"64934df8-b752-536a-a782-8fdbae1d3df7","path":"/readme","title":"Cloud computing notes","excerpt":"Cloud computing notes TODO cloud-computing-lecture Notes regarding the cloud computing course held in the summer semester 2021 Content…"},"22b6f149-5381-5b48-a962-e52877ac72e7":{"id":"22b6f149-5381-5b48-a962-e52877ac72e7","path":"/shared-disk-architecture","title":"shared-disk-architecture","excerpt":"shared-disk-architecture Pro: Adaptiert schnell bei unterschiedlichen Last Szenarien (dynamisches Loadbalancing) Failover / HA ist einfach…"},"cb39dcd6-7ae9-53ec-8729-ee9391485ab2":{"id":"cb39dcd6-7ae9-53ec-8729-ee9391485ab2","path":"/shared-nothing","title":"shared-nothing","excerpt":"shared-nothing Daten sind partitioniert (Sharding) und lokal zum verarbeitenden Knoten (unendlich) skalierbar Pro: Gut bei hoher Lese…"},"e3f82a6b-cb80-5b2e-a0f4-ea22a5e53d30":{"id":"e3f82a6b-cb80-5b2e-a0f4-ea22a5e53d30","path":"/thread-pooling-pattern","title":"thread-pooling-pattern","excerpt":"thread-pooling-pattern DOING Sources https://en.wikipedia.org/wiki/Thread_pool"},"6884d127-348d-5ffc-8eb2-0d71e07dbf1c":{"id":"6884d127-348d-5ffc-8eb2-0d71e07dbf1c","path":"/verteilung-von-code","title":"verteilung-von-code","excerpt":"verteilung-von-code Probleme durch Parallelisierung [amdahls-law] [ datenabhängigkeiten ] Patterns zur Verteilung von code [mapReduce]"},"558193fc-67dc-52e1-a6b4-dac2452a6176":{"id":"558193fc-67dc-52e1-a6b4-dac2452a6176","path":"/verteilung-von-daten","title":"verteilung-von-daten","excerpt":"verteilung-von-daten Probleme bei Verteilung von Daten [brewers-theorem] [multiversion-concurrency-control] Patterns für die Verteilung…"},"f6313960-246d-5d47-81fc-0b44bcc1733b":{"id":"f6313960-246d-5d47-81fc-0b44bcc1733b","path":"/zugriff-auf-daten-und-code","title":"zugriff-auf-daten-und-code","excerpt":"zugriff-auf-daten-und-code Wie Netzwerkprobleme ausgleichen? Netzwerkprobleme ausgleichen durch: [cloud-resilienz] [ algorithmische…"}}